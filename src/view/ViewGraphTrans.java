package view;

import java.util.Observable;
import java.util.Observer;
import javax.swing.JPanel;
import model.ModelGraphTrans;
import org.graphstream.ui.view.Viewer;
import org.graphstream.ui.view.ViewerPipe;

public class ViewGraphTrans extends javax.swing.JFrame implements Observer {

    private ModelGraphTrans model;
    private Viewer viewer;
    private ViewerPipe fromViewer;

    /**
     * Creates new form ViewGraphTrans
     */
    public ViewGraphTrans() {
        initComponents();
    }

    public ViewGraphTrans(ModelGraphTrans modelGraphTrans) {
        this.model = modelGraphTrans;
        initComponents();

        viewer = new Viewer(model.getGraph(), Viewer.ThreadingModel.GRAPH_IN_ANOTHER_THREAD);
        viewer.enableAutoLayout();
        viewGraph.add(viewer.addDefaultView(false));

        fromViewer = viewer.newViewerPipe();
//        fromViewer.addViewerListener(new Click(modelGraphTrans));
        fromViewer.addSink(model.getGraph());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewGraph = new javax.swing.JPanel();

        setMinimumSize(new java.awt.Dimension(800, 600));

        viewGraph.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Current graph transition", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 3, 10))); // NOI18N
        viewGraph.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(viewGraph, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(viewGraph, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel viewGraph;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object o1) {
        fromViewer.pump();
    }

    public JPanel getViewGraph() {
        return viewGraph;
    }

    public Viewer getViewer() {
        return viewer;
    }
}
